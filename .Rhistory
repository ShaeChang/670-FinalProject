select(token, n) %>%
wordcloud2(size = 1, color = "#003366", backgroundColor = "#FFFFCC", shape = 'diamond')
knitr::include_graphics("data/p2.png")
set.seed(20220706)
p3 <- subfile_token %>%
filter(title == "关于电力交易机构组建和规范运行的实施意见") %>%
select(token, n) %>%
wordcloud2(size = 1, color = "#003366", backgroundColor = "#FFFFCC", shape = 'diamond')
knitr::include_graphics("data/p3.png")
set.seed(20220806)
p4 <- subfile_token %>%
filter(title == "关于有序放开发用电计划的实施意见") %>%
select(token, n) %>%
wordcloud2(size = 1, color = "#003366", backgroundColor = "#FFFFCC")
knitr::include_graphics("data/p4.png")
set.seed(20220906)
p5 <- subfile_token %>%
filter(title == "关于推进售电侧改革的实施意见") %>%
select(token, n) %>%
wordcloud2(size = 1, color = "#003366", backgroundColor = "#FFFFCC")
knitr::include_graphics("data/p5.png")
set.seed(20221006)
p6 <- subfile_token %>%
filter(title == "关于加强和规范燃煤自备电厂监督管理的指导意见") %>%
select(token, n) %>%
wordcloud2(size = 1, color = "#003366", backgroundColor = "#FFFFCC", shape = 'diamond')
knitr::include_graphics("data/p6.png")
policy_token_tidy <- policy_token %>%
count(title, year, token) %>%
rename(count = n)
total <- policy_token_tidy %>%
group_by(year) %>%
summarise(total_freq = sum(count))
year_term_count <- policy_token_tidy %>%
count(year, token) %>%
rename(count = n) %>%
inner_join(total)%>%
mutate(freq = count/total_freq) %>%
#check the total tokens in one year, to see the frequency of the selected key words appearred in each years
arrange(year, desc(freq), token)
year_term_count %>%
group_by(year) %>%
#to choose the top 10 frequent tokens in each year
slice_max(freq, n = 10)
p_year_term_counts <- year_term_count %>%
filter(token %in% c("输配电价", "电力市场","交易机构","直接交易","售电公司","燃煤")) %>%
ggplot(aes(year, freq)) +
geom_point() +
geom_smooth() +
facet_wrap(~token, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
labs(y = "% frequency of word in yearly policy documents") +
theme_minimal()
p_year_term_counts
#generate a Document Term Matrix for topic analysis
policy_token_dfm <- policy_token_tidy %>%
cast_dfm(title, token, count)
# conduct LDA while set the number of topic as 7, out of the assumption of including 6 initial topics and one irrelevant random topic
# set a seed so that the prediction is predictable
policy_lda <- LDA(policy_token_dfm, k = 7, control = list(seed = 1509))
policy_topics <- tidy(policy_lda, matrix = "beta")
# "beta" is the method of extracting the per-topic-per-word probabilities from the model
policy_topic_terms <- policy_topics %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta) %>%
#provide English translation for each topics
add_column(term_Eng = c("electricity grid", "provincial","permission","regional","supervision","cost","price","transmission and distribution elec_price","ratified","period","electricity generation","electricity","priority","users","transanction","market","electricity volume","safeguard","participate","electricity purchase","energy","renewable energy","electricity","electricity generation","distributive","utilization efficiency","regional","pilot","project","power grid company","market","information","electricity","transanction","spot goods","institution","disclosure","spot goods transanction","transregional","region","market","transaction","electricity","institution","electricity transanction","market players","electricity volumn","transanction institution","information","electricity market","power distribution","project","power distribution grid","increment","supervision","energy","pilot","electricity grid","power supply","planning","energy","project","renewable energy","coal power","electricity price","reform","electricity generation","price","subsidy","funding"))
#find the 10 terms that are most common within each topic.
policy_topic_terms
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_x") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_y") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_y") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_y") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
English_labels <- c("transmission and distribution elec_price","electricity market","transanction institution","	direct transanction","electricity sales company","coal power")
p_year_term_counts <- year_term_count %>%
filter(token %in% c("输配电价", "电力市场","交易机构","直接交易","售电公司","燃煤")) %>%
ggplot(aes(year, freq)) +
geom_point() +
geom_smooth() +
facet_wrap(~token, scales = "free_y", labeller = labeller(category = English_labels))+
scale_y_continuous(labels = scales::percent_format()) +
labs(y = "% frequency of word in yearly policy documents") +
theme_minimal()
p_year_term_counts
English_labels <- c("transmission and distribution elec_price","electricity market","transanction institution","	direct transanction","electricity sales company","coal power")
p_year_term_counts <- year_term_count %>%
filter(token %in% c("输配电价", "电力市场","交易机构","直接交易","售电公司","燃煤")) %>%
ggplot(aes(year, freq)) +
geom_point() +
geom_smooth() +
facet_wrap(~token, scales = "free_y", labeller = labeller(category = English_labels))+
scale_y_continuous(labels = scales::percent_format()) +
labs(y = "% frequency of word in yearly policy documents") +
theme_minimal()
p_year_term_counts
English_labels <- c("transmission and distribution elec_price","electricity market","transanction institution","	direct transanction","electricity sales company","coal power")
p_year_term_counts <- year_term_count %>%
filter(token %in% c("输配电价", "电力市场","交易机构","直接交易","售电公司","燃煤")) %>%
ggplot(aes(year, freq)) +
geom_point() +
geom_smooth() +
facet_wrap(~token, scales = "free_y", labeller = English_labels)+
scale_y_continuous(labels = scales::percent_format()) +
labs(y = "% frequency of word in yearly policy documents") +
theme_minimal()
p_year_term_counts
English_labels <- c("transmission and distribution elec_price","electricity market","transanction institution","	direct transanction","electricity sales company","coal power")
p_year_term_counts <- year_term_count %>%
filter(token %in% c("输配电价", "电力市场","交易机构","直接交易","售电公司","燃煤")) %>%
ggplot(aes(year, freq)) +
geom_point() +
geom_smooth() +
facet_wrap(~token, scales = "free_y", labeller = labeller(category = (English_labels))) +
scale_y_continuous(labels = scales::percent_format()) +
labs(y = "% frequency of word in yearly policy documents") +
theme_minimal()
p_year_term_counts
p_year_term_counts <- year_term_count %>%
filter(token %in% c("输配电价", "电力市场","交易机构","直接交易","售电公司","燃煤"))
p_year_term_counts
p_year_term_counts %>%
group_by(token)
p_year_term_counts[p_year_term_counts == "输配电价"] <- "transmission and distribution elec_price"
p_year_term_counts
p_year_term_counts[p_year_term_counts == "输配电价"] <- "transmission and distribution elec_price"
p_year_term_counts[p_year_term_counts == "电力市场"] <- "electricity market"
p_year_term_counts[p_year_term_counts == "交易机构"] <- "transanction institution"
p_year_term_counts[p_year_term_counts == "直接交易"] <- "direct transanction"
p_year_term_counts[p_year_term_counts == "售电公司"] <- "electricity sales company"
p_year_term_counts[p_year_term_counts == "燃煤"] <- "coal power"
p_year_term_counts
policy_token_tidy <- policy_token %>%
count(title, year, token) %>%
rename(count = n)
total <- policy_token_tidy %>%
group_by(year) %>%
summarise(total_freq = sum(count))
year_term_count <- policy_token_tidy %>%
count(year, token) %>%
rename(count = n) %>%
inner_join(total)%>%
mutate(freq = count/total_freq) %>%
#check the total tokens in one year, to see the frequency of the selected key words appearred in each years
arrange(year, desc(freq), token)
year_term_count %>%
group_by(year) %>%
#to choose the top 10 frequent tokens in each year
slice_max(freq, n = 10)
p_year_term_counts <- year_term_count %>%
filter(token %in% c("输配电价", "电力市场","交易机构","直接交易","售电公司","燃煤"))
# Translate those tokens into English for data visualization
p_year_term_counts[p_year_term_counts == "输配电价"] <- "transmission and distribution elec_price"
p_year_term_counts[p_year_term_counts == "电力市场"] <- "electricity market"
p_year_term_counts[p_year_term_counts == "交易机构"] <- "transanction institution"
p_year_term_counts[p_year_term_counts == "直接交易"] <- "direct transanction"
p_year_term_counts[p_year_term_counts == "售电公司"] <- "electricity sales company"
p_year_term_counts[p_year_term_counts == "燃煤"] <- "coal power"
# Conduct data visualization
p_dataviz <- p_year_term_counts %>%
ggplot(aes(year, freq)) +
geom_point() +
geom_smooth() +
facet_wrap(~token, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
labs(y = "% frequency of word in yearly policy documents") +
theme_minimal()
p_dataviz
#generate a Document Term Matrix for topic analysis
policy_token_dfm <- policy_token_tidy %>%
cast_dfm(title, token, count)
# conduct LDA while set the number of topic as 7, out of the assumption of including 6 initial topics and one irrelevant random topic
# set a seed so that the prediction is predictable
policy_lda <- LDA(policy_token_dfm, k = 7, control = list(seed = 1509))
policy_topics <- tidy(policy_lda, matrix = "beta")
# "beta" is the method of extracting the per-topic-per-word probabilities from the model
policy_topic_terms <- policy_topics %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta) %>%
#provide English translation for each topics
add_column(term_Eng = c("electricity grid", "provincial","permission","regional","supervision","cost","price","transmission and distribution elec_price","ratified","period","electricity generation","electricity","priority","users","transanction","market","electricity volume","safeguard","participate","electricity purchase","energy","renewable energy","electricity","electricity generation","distributive","utilization efficiency","regional","pilot","project","power grid company","market","information","electricity","transanction","spot goods","institution","disclosure","spot goods transanction","transregional","region","market","transaction","electricity","institution","electricity transanction","market players","electricity volumn","transanction institution","information","electricity market","power distribution","project","power distribution grid","increment","supervision","energy","pilot","electricity grid","power supply","planning","energy","project","renewable energy","coal power","electricity price","reform","electricity generation","price","subsidy","funding"))
#find the 10 terms that are most common within each topic.
policy_topic_terms
#Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_y") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
policy_keywords %>%
select(keyword_Eng, title_Eng)
policy_keywords %>%
select(keyword_Eng, title_Eng) %>%
filter(!".")
policy_keywords %>%
select(keyword_Eng, title_Eng) %>%
filter(keyword_Eng != ".")
idf <- worker(
"keywords",
user = "electricity_word.txt",
stop_word = "customed chinese stop word.txt",
topn = 5,
# To select the top 5 key words for each supportive documents
bylines = TRUE
)
extract_keywords <- function(x){
df <- data_frame(keyword = keywords(policy_doc$content[x], idf), number = x, year = policy_doc$year[x], title = policy_doc$title[x])
return(df)
}
policy_keywords <- bind_rows(lapply(2:7, extract_keywords)) %>%
filter(!is.na(keyword)) %>%
add_column(keyword_Eng = c(".","transmission and distribution elec_price","pilot","reform","power grid company",".","electricity market","market","transanction","market player",".","transanction institution","transanction","electricity transanction","market",".","electricity volumn","electricity generation","priority","direct transanction",".","market player","electricity sales company","electricity saling","power supply",".","self-contained","power plant","coal power","generator set")) %>%
add_column(title_Eng = c("Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants"))
policy_keywords %>% filter(keyword_Eng != ".")
policy_keywords %>%
select(keyword_Eng, title_Eng)
idf <- worker(
"keywords",
user = "electricity_word.txt",
stop_word = "customed chinese stop word.txt",
topn = 5,
# To select the top 5 key words for each supportive documents
bylines = TRUE
)
extract_keywords <- function(x){
df <- data_frame(keyword = keywords(policy_doc$content[x], idf), number = x, year = policy_doc$year[x], title = policy_doc$title[x])
return(df)
}
policy_keywords <- bind_rows(lapply(2:7, extract_keywords)) %>%
filter(!is.na(keyword)) %>%
add_column(keyword_Eng = c(".","transmission and distribution elec_price","pilot","reform","power grid company",".","electricity market","market","transanction","market player",".","transanction institution","transanction","electricity transanction","market",".","electricity volumn","electricity generation","priority","direct transanction",".","market player","electricity sales company","electricity saling","power supply",".","self-contained","power plant","coal power","generator set")) %>%
add_column(title_Eng = c("Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Reform of Transmission and Distribution Electricity Prices","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on Promoting the Construction of Electricity Market","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Formation and Standardized Operation of Electricity Transanction Institutions","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on the Planned Liberation of Electricity Generation and Consumption Plans","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Implementation Opinions on Promoting the Reform of the Electricity Sales Side","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants","Guiding Opinions on Strengthening and Standardizing the Supervision and Management of Coal-fired Self-Contained Power Plants")) %>%
filter(keyword_Eng != ".")
policy_keywords
policy_keywords %>%
select(keyword_Eng, title_Eng)
policy_keywords %>%
select(number, keyword_Eng, title_Eng)
policy_keywords %>%
select(number, keyword_Eng, title_Eng) %>%
mutate(Num = number - 1)
policy_keywords %>%
select(number, keyword_Eng, title_Eng) %>%
mutate(Num = as.double(number) - 1)
policy_keywords %>%
select(number, keyword_Eng, title_Eng) %>%
mutate(Num = as.double(number) - 1) %>%
select(Num, keyword_Eng, title_Eng)
install.packages("textdata")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(dplyr)
library(tidyverse)
library(tidymodels)
library(textrecipes)
library(jiebaR)
# the Chinese tokenizer package
library(purrr)
library(ggplot2)
library(wordcloud2)
library(RColorBrewer)
library(topicmodels)
library(tidytext)
library(quanteda)
library(SnowballC)
library(sentimentr)
library(reshape2)
library(wordcloud)
library(textdata)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
p_year_term_counts <- year_term_count %>%
filter(token %in% c("输配电价", "电力市场","交易机构","直接交易","售电公司","燃煤"))
# Translate those tokens into English for data visualization
p_year_term_counts[p_year_term_counts == "输配电价"] <- "transmission and distribution elec_price"
p_year_term_counts[p_year_term_counts == "电力市场"] <- "electricity market"
p_year_term_counts[p_year_term_counts == "交易机构"] <- "transanction institution"
p_year_term_counts[p_year_term_counts == "直接交易"] <- "direct transanction"
p_year_term_counts[p_year_term_counts == "售电公司"] <- "electricity sales company"
p_year_term_counts[p_year_term_counts == "燃煤"] <- "coal power"
# Conduct data visualization
p_dataviz <- p_year_term_counts %>%
ggplot(aes(year, freq)) +
geom_point() +
geom_smooth() +
facet_wrap(~token, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
labs(y = "% frequency of word in yearly policy documents") +
theme_minimal()
p_dataviz
#generate a Document Term Matrix for topic analysis
policy_token_dfm <- policy_token_tidy %>%
cast_dfm(title, token, count)
# conduct LDA while set the number of topic as 7, out of the assumption of including 6 initial topics and one irrelevant random topic
# set a seed so that the prediction is predictable
policy_lda <- LDA(policy_token_dfm, k = 7, control = list(seed = 1509))
policy_topics <- tidy(policy_lda, matrix = "beta")
# "beta" is the method of extracting the per-topic-per-word probabilities from the model
policy_topic_terms <- policy_topics %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta) %>%
#provide English translation for each topics
add_column(term_Eng = c("electricity grid", "provincial","permission","regional","supervision","cost","price","transmission and distribution elec_price","ratified","period","electricity generation","electricity","priority","users","transanction","market","electricity volume","safeguard","participate","electricity purchase","energy","renewable energy","electricity","electricity generation","distributive","utilization efficiency","regional","pilot","project","power grid company","market","information","electricity","transanction","spot goods","institution","disclosure","spot goods transanction","transregional","region","market","transaction","electricity","institution","electricity transanction","market players","electricity volumn","transanction institution","information","electricity market","power distribution","project","power distribution grid","increment","supervision","energy","pilot","electricity grid","power supply","planning","energy","project","renewable energy","coal power","electricity price","reform","electricity generation","price","subsidy","funding"))
#find the 10 terms that are most common within each topic.
policy_topic_terms
# Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_y") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
# Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_y") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
# Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_y") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
# Draw plots for these topics
policy_topic_terms %>%
mutate(term_Eng = reorder_within(term_Eng, beta, topic)) %>%
ggplot(aes(beta, term_Eng, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, ncol = 2, scales = "free_y") +
# to show the top terms for each topics, respectively
scale_y_reordered() +
labs(title = "Top 10 terms for 7 topics") +
theme_minimal()
library(textdata)
cite(tidytext)
cite("tidytext")
citation("tidytext")
